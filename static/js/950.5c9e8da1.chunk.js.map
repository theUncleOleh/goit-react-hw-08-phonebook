{"version":3,"file":"static/js/950.5c9e8da1.chunk.js","mappings":"uKACA,MAAwB,2B,SCAT,SAASA,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,eAAIC,UAAWC,EAAf,SAAyBF,M,mGCDlC,K,gDCSe,SAASG,IAWtB,IAAMC,GAAWC,EAAAA,EAAAA,MAGjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHN,EAASO,GACT,MACF,IAAK,WACHL,EAAYK,GACZ,MACF,QACE,SAuBAC,EAAQ,WACZR,EAAS,IACTE,EAAY,KAGd,OAqBE,kBAAMO,SA7Ca,SAAAL,GACnBA,EAAMM,iBAINd,EAASe,EAAAA,EAAAA,MAAqB,CAAEZ,MAAAA,EAAOE,SAAAA,KAIvCO,KAoC8Bf,UAAWC,EAAAA,KAAzC,WACE,mBAAOkB,QAAQ,GAAGnB,UAAWC,EAAAA,MAA7B,oBAEE,kBACEmB,aAAa,MACbpB,UAAWC,EAAAA,MACXoB,KAAK,QACLR,KAAK,QACLC,MAAOR,EACPgB,SAAUZ,QAKd,mBAAOS,QAAQ,GAAGnB,UAAWC,EAAAA,MAA7B,sBAEE,kBACEmB,aAAa,MACbpB,UAAWC,EAAAA,MACXoB,KAAK,WACLR,KAAK,WACLC,MAAON,EACPc,SAAUZ,QAKd,SAACa,EAAA,EAAD,CAAQF,KAAK,SAASrB,UAAWC,EAAAA,OAAjC,uBC7GS,SAASuB,IACtB,OACE,iCACE,SAAC1B,EAAA,EAAD,CAAaC,KAAK,WAClB,SAAC,EAAD","sources":["webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.jsx","components/IsUserLogin/IsUserLogin.module.css","components/IsUserLogin/IsUserLogin.jsx","pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import s from './PageHeading.module.css';\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState } from 'react';\nimport s from './IsUserLogin.module.css';\n// import { useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import Form from 'react-bootstrap/Form';\nimport { Button } from 'react-bootstrap';\n// import InputGroup from 'react-bootstrap/InputGroup';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n// import { useAddContactMutation } from 'redux/contacts/itemsOperations';\nexport default function UserLoadingForm() {\n  // const [addContacts] = useAddContactMutation();\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   const name = e.currentTarget.elements.name.value;\n  //   const phone = e.currentTarget.elements.number.value;\n  //   console.log(name);\n  //   console.log(phone);\n  //   addContacts({ name, phone });\n  //   e.currentTarget.reset();\n  // };\n  const dispatch = useDispatch(); \n  \n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // const user = { name, email, password };\n    // console.log(user);\n    dispatch(authOperations.logIn({ email, password }));\n    // navigate('/contacts');\n    // console.log('navigate', navigate);\n    // onSubmit(user);\n    reset();\n  };\n  // const numberFormatting = phone => {\n  //   const array = [...phone];\n  //   for (let i = 3; i < array.length - 1; i += 3) {\n  //     array.splice(i, 0, '-');\n  //   }\n  //   return array.join('');\n  // };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    // <Form>\n    //   <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n    //     <Form.Label>Email address</Form.Label>\n    //     <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    //     <Form.Text className=\"text-muted\">\n    //       We'll never share your email with anyone else.\n    //     </Form.Text>\n    //   </Form.Group>\n\n    //   <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n    //     <Form.Label>Password</Form.Label>\n    //     <Form.Control type=\"password\" placeholder=\"Password\" />\n    //   </Form.Group>\n    //   <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    //     <Form.Check type=\"checkbox\" label=\"Check me out\" />\n    //   </Form.Group>\n    //   <Button variant=\"primary\" type=\"submit\">\n    //     Submit\n    //   </Button>\n    // </Form>\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label htmlFor=\"\" className={s.label}>\n        E-mail\n        <input\n          autoComplete=\"off\"\n          className={s.input}\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n      </label>\n      <label htmlFor=\"\" className={s.label}>\n        Password\n        <input\n          autoComplete=\"off\"\n          className={s.input}\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n      </label>\n      <Button type=\"submit\" className={s.button}>\n        Log In\n      </Button>\n    </form>\n  );\n}\n","import PageHeading from 'components/PageHeading';\nimport IsUserLogin from 'components/IsUserLogin';\n\nexport default function Login() {\n  return (\n    <>\n      <PageHeading text=\"Login\" />\n      <IsUserLogin />\n    </>\n  );\n}\n"],"names":["PageHeading","text","className","s","UserLoadingForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","event","target","name","value","reset","onSubmit","preventDefault","authOperations","htmlFor","autoComplete","type","onChange","Button","Login"],"sourceRoot":""}