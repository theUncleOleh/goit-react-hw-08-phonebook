{"version":3,"file":"static/js/640.0aef9d95.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/UserContacts.jsx","redux/contacts/items-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import s from './PageHeading.module.css';\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactList_title__gpugJ\",\"list\":\"ContactList_list__csErn\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__UAAix\",\"graf\":\"ContactListItem_graf__nKxW+\",\"button\":\"ContactListItem_button__SG6H2\"};","// import ScaleLoader from 'react-spinners/ScaleLoader';\nimport { FiUser, FiPhone } from 'react-icons/fi';\nimport { NavLink } from 'react-router-dom';\n\n// import { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport s from './ContactListItem.module.css';\nimport { itemsOperations } from 'redux/contacts';\nexport default function ContactListItem({ id, name, number }) {\n  const dispatch = useDispatch();\n  // const contactId = useParams();\n  // console.log('contactId', contactId);\n  // const navigate = useNavigate();\n  const deleteListItem = id => {\n    console.log(id);\n    dispatch(itemsOperations.deleteContacts(id));\n  };\n\n  return (\n    <>\n      <li className={s.item}>\n        <NavLink to={`${id}`}>\n          <span className={s.graf}>\n            <FiUser />\n            {name}\n          </span>\n          <span> : </span>\n          <span className={s.graf}>\n            <FiPhone /> {number}\n          </span>\n        </NavLink>\n        <Button type=\"button\" onClick={() => deleteListItem(id)}>\n          Delete\n        </Button>\n        {/* <Button type=\"button\">\n          <Link\n            to={`/contacts/${id}`}\n            // className={({ isActive }) => (!isActive ? s.link : s.active)}\n          ></Link>\n          Edit\n        </Button> */}\n\n        {/* <button => \n          type=\"button\"\n        \n          className={s.button}\n         \n        >\n          {isDeliting ? (\n            <ScaleLoader height={15} width={5} margin={2} />\n          ) : (\n            'Delete'\n          )}\n        </button> */}\n      </li>\n    </>\n  );\n}\n\nContactListItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","import React from 'react';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filter } from 'redux/contacts/filter-slice';\n// import { getFilterSelector } from '../../redux/contacts/items-selectors';\nimport { itemsSelectors } from 'redux/contacts';\nexport default function Filter() {\n  const value = useSelector(itemsSelectors.getFilterSelector);\n\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    dispatch(filter(e.target.value));\n    console.log();\n  };\n  return (\n    <label className={s.label}>\n      Filter\n      <input\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n        className={s.input}\n      />\n    </label>\n  );\n}\n","import React, { Fragment } from 'react';\nimport { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport s from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { itemsSelectors } from 'redux/contacts';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\n// import { useGetAllContactsQuery } from 'redux/contacts/auth-operations';\n// import Loader from 'components/Loader';\nimport { useDispatch } from 'react-redux';\nimport { itemsOperations } from 'redux/contacts';\nimport { useParams } from 'react-router';\nimport Filter from 'components/Filter';\n\nexport default function ContactList() {\n  const filter = useSelector(itemsSelectors.getFilterSelector);\n  const dispatch = useDispatch();\n  const { userId } = useParams();\n  console.log(userId);\n  useEffect(() => {\n    dispatch(itemsOperations.contacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(state => state.contacts.contacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formNumber = numberFormatting(number);\n    const user = { name, number: formNumber };\n\n    dispatch(itemsOperations.addContacts(user));\n    toast.success(`${name} was added to contacts!`);\n    reset();\n  };\n\n  const numberFormatting = number => {\n    const array = [...number];\n    for (let i = 3; i < array.length - 1; i += 3) {\n      array.splice(i, 0, '-');\n    }\n    return array.join('');\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  // const deleteListItem = id => {\n  //   console.log(id);\n  //   dispatch(itemsOperations.deleteContacts(id));\n  //   // toast.success(`Contact ${name} successfuly delete`);\n  // };\n\n  const getVisibleContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts?.filter(({ name }) =>\n      name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n  // const getVisibleContacts = createSelector([]);\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <Fragment>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label htmlFor=\"\" className={s.label}>\n          Name\n          <input\n            autoComplete=\"off\"\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label htmlFor=\"\" className={s.label}>\n          Number\n          <input\n            autoComplete=\"off\"\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          />\n        </label>\n        <Button type=\"submit\">Create</Button>\n      </form>\n      <Filter />\n      <ul className={s.list}>\n        {visibleContacts?.map(contact => (\n          <ContactListItem\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n          />\n        ))}\n      </ul>\n\n      <ToastContainer />\n    </Fragment>\n  );\n}\n        \n","import PageHeading from 'components/PageHeading';\nimport ContactList from 'components/ContactList';\n\nexport default function UserContacts() {\n  return (\n    <>\n      <PageHeading text=\"Contacts\" />\n      <ContactList />\n    </>\n  );\n}\n","const getContactsSelector = state => state.contacts.contacts;\n\nconst getFilterSelector = state => state.filter.value;\nconsole.log(getFilterSelector);\nconst selectors = {\n  getContactsSelector,\n  getFilterSelector,\n};\nexport default selectors;\n"],"names":["PageHeading","text","className","s","ContactListItem","id","name","number","dispatch","useDispatch","to","Button","type","onClick","console","log","itemsOperations","deleteListItem","Filter","value","useSelector","itemsSelectors","onChange","e","filter","target","ContactList","userId","useParams","useEffect","contacts","state","useState","setName","setNumber","handleChange","event","numberFormatting","array","i","length","splice","join","reset","visibleContacts","normalizeFilter","toLowerCase","includes","getVisibleContacts","Fragment","onSubmit","preventDefault","formNumber","user","toast","htmlFor","autoComplete","pattern","title","required","map","contact","UserContacts","getFilterSelector","getContactsSelector"],"sourceRoot":""}